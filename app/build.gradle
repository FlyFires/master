apply plugin: 'com.android.application'


android {
    compileSdkVersion 25
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "cn.nineox.robot"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 27
        versionName "1.4.4"


    /*    ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }*/

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "19465f40a07c14f0c770e81a", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "080712513ab425ce46f4ebc1", //暂时填写默认值即可.
        ]

    }
    configurations.all {
        resolutionStrategy.force 'com.android.support:support-annotations:23.1.0'
    }

    lintOptions {
        abortOnError false
    }



    signingConfigs {
        debug {
            // No debug config
            storeFile file("../robot.jks")
            storePassword "123456"
            keyAlias "robot"
            keyPassword "123456"
        }
        release {
            storeFile file("../robot.jks")
            storePassword '123456'
            keyAlias "robot"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            // 混淆
            minifyEnabled false
            // Zipalign优化
            //zipAlignEnabled true
            // 移除无用的resource文件
            //shrinkResources true
            // 前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }




    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
    sourceSets{
        main{
            jniLibs.srcDir(['libs'])
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //compile(name: 'rtp2pcall_kit-release', ext: 'aar')
    compile 'com.android.support:appcompat-v7:25.3.1'
    //compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:25.3.1'

    /* tutk sdk */
    compile(name: 'libTUTKMedia_1.1.0.2_release', ext: 'aar')
    compile(name: 'libTUTKP2P_1.1.0.3_release', ext: 'aar')
    //compile(name: 'tutkzxing-release', ext: 'aar')

    compile 'me.yokeyword:fragmentation:1.1.6'
    compile 'me.yokeyword:fragmentation-core:1.1.6'

    compile 'com.yanzhenjie.nohttp:nohttp:1.1.4'
    compile 'com.yanzhenjie.nohttp:okhttp:1.1.4'
    compile 'com.alibaba:fastjson:1.1.56.android'
    compile 'com.qmuiteam:qmui:1.0.4'

    compile 'cn.jiguang.sdk:jpush:3.0.9'  // 此处以JPush 3.0.9 版本为例。
    compile 'cn.jiguang.sdk:jcore:1.1.7'  // 此处以JCore 1.1.7 版本为例。
    compile 'cn.finalteam:galleryfinal:1.4.8.7'
    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'// 上下拉刷新库
    compile 'org.greenrobot:eventbus:3.1.1'

    // Required -- JUnit 4 framework
    testCompile 'junit:junit:4.12'

    compile project(':xframework')
    compile project(':lib-zxing')
    compile 'info.hoang8f:android-segmented:1.0.6'



}
