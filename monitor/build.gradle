apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId "cn.nineox.robot.monitor"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 27
        versionName "1.4.4"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

      /*  ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi'
//            abiFilters 'armeabi-v7a','x86', 'x86_64', 'mips', 'mips64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }*/


    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    dataBinding {
        enabled = true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }


    signingConfigs {
        debug {
            // No debug config
            storeFile file("../robot.jks")
            storePassword "123456"
            keyAlias "robot"
            keyPassword "123456"
        }
        release {
            storeFile file("../robot.jks")
            storePassword '123456'
            keyAlias "robot"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            // 混淆
            minifyEnabled false
            // Zipalign优化
            //zipAlignEnabled true
            // 移除无用的resource文件
            //shrinkResources true
            // 前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets{
        main{
            jniLibs.srcDir(['libs'])
        }
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    /* tutk sdk */
    compile(name: 'libTUTKMedia_1.1.0.2_release', ext: 'aar')
    compile(name: 'libTUTKP2P_1.1.0.3_release', ext: 'aar')

    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    testCompile 'junit:junit:4.12'
    compile ('com.alibaba.android:ultraviewpager:1.0.6.1@aar') {
        transitive = true
    }
    compile 'org.greenrobot:eventbus:3.1.1'

    compile 'me.yokeyword:fragmentation:1.1.6'
    compile 'me.yokeyword:fragmentation-core:1.1.6'

    compile 'com.qmuiteam:qmui:1.0.4'

    compile 'cn.finalteam:galleryfinal:1.4.8.7'
    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile project(':xframework')
    compile project(':lib-zxing')
//
//    compile(name: 'iot-release', ext: 'aar')
//    compile(name: 'authority-release', ext: 'aar')
//    compile(name: 'sdkhttp', ext: 'aar')

}
